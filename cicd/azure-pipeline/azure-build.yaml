pool:
  vmImage: 'ubuntu-16.04'

trigger:
  branches:
    include:
    - master

pr:
- master

schedules:
- cron: "0 10 * * *"
  displayName: Daily Build
  always: true
  branches:
    include:
    - master

stages:
- stage: Build
  variables:
    - group: ci_quora_details
    - group: ci_gpg_keys
    - name: MAVEN_CACHE_FOLDER
      value: $(Pipeline.Workspace)/.m2/repository
    - name: MAVEN_OPTS
      value:  '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  jobs:
  - job: Build
    steps:
      - task: DownloadSecureFile@1
        name: gpgKey
        displayName: 'Download GPG key file'
        inputs:
          secureFile: 'oss-gpg-key.asc'
      
      - script: |
          gpg --no-tty --batch --yes --import $(gpgKey.secureFilePath)

      - task: Cache@2
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
            maven
          path: $(MAVEN_CACHE_FOLDER)
        displayName: Cache Maven local repo

      ## Maven steps documentation - https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven?view=azure-devops
      - task: Maven@3
        displayName: 'Verify build (Maven)'
        inputs:
          goals: verify -DskipITs
          options: '$(MAVEN_OPTS)'
          jdkVersionOption: '1.8'
          testResultsFiles: '**/TEST-*.xml'
        env:
            QUORA_CONTACT: $(quora.contact)
            QUORA_LOGIN_USERNAME: $(quora.login.username)
            QUORA_LOGIN_PASSWORD: $(quora.login.password)
            GPG_PASSPHRASE: $(gpg_key_passphrase)

      - task: CopyFiles@2
        displayName: 'Copy jar to staging directory.'
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/target'
          contents: |
            *.jar
            *.asc
            *.pom
          targetFolder: '$(Build.ArtifactStagingDirectory)/target/'

      - publish: '$(Build.ArtifactStagingDirectory)/target/'
        artifact: build
- stage: Deploy
  variables:
    - group: ci_oss_nexus
  jobs:
    - deployment: deploy_artifact
      environment: deploy_artifact
      displayName: Deploy Artifact
      pool:
        vmImage: 'Ubuntu-16.04'
      strategy: 
        runOnce:
          deploy:
            steps:
              - task: MavenAuthenticate@0
                displayName: 'Maven Authenticate'
                inputs:
                  artifactsFeeds: 'open-source-bluurr-io'
                  mavenServiceConnections: 'maven-oss-staging'
              - task: Bash@3
                env:
                  URL: $(ci_staging_oss_nexus_url)
                inputs:
                  targetType: 'inline'
                  workingDirectory: $(Pipeline.Workspace)/build
                  script: |
                    ls
                    POM_FILE=$(ls *.pom)
                    
                    echo "Using POM_FILE: ${POM_FILE}"
                    
                    ## extract values required
                    VERSION=$(mvn -f ${POM_FILE} help:evaluate -Dexpression=project.version -q -DforceStdout)
                    GROUP_ID=$(mvn -f ${POM_FILE} help:evaluate -Dexpression=project.groupId -q -DforceStdout)
                    ARTIFACT_ID=$(mvn -f ${POM_FILE} help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
                    
                    ARTIFACT_ID_WITH_VERSION="${ARTIFACT_ID}-${VERSION}"
                    
                    echo "MVN: ${GROUP_ID}:${ARTIFACT_ID}:${VERSION}"
                    
                    URL=https://oss.sonatype.org/service/local/staging/deploy/maven2/
                    
                    ## Upload files to nexus
                    mvn deploy:deploy-file \
                        -DgroupId=${GROUP_ID} \
                        -DartifactId=${ARTIFACT_ID} \
                        -Dversion=${VERSION} \
                        -Dpackaging=jar \
                        -DpomFile=${ARTIFACT_ID_WITH_VERSION}.pom \
                        -Dfile=${ARTIFACT_ID_WITH_VERSION}.jar \
                        -Dfiles="${ARTIFACT_ID_WITH_VERSION}-javadoc.jar.asc,${ARTIFACT_ID_WITH_VERSION}-sources.jar.asc,${ARTIFACT_ID_WITH_VERSION}.jar.asc,${ARTIFACT_ID_WITH_VERSION}.pom.asc" \
                        -Dclassifiers="javadoc,sources,jar,pom" \
                        -Dtypes="asc,asc,asc,asc" \
                        -Dsources=${ARTIFACT_ID_WITH_VERSION}-sources.jar \
                        -Djavadoc=${ARTIFACT_ID_WITH_VERSION}-javadoc.jar \
                        -DrepositoryId=sonatype-nexus-staging-bluurr \
                        -Durl=${URL}